set windows-shell := ["powershell.exe", "-NoLogo", "-Command"]

default:
  just --list

export RUSTFLAGS := "-Cembed-bitcode=yes -Ctarget-cpu=native -Cprefer-dynamic=no"

[private]
[no-exit-message]
@probe-7zip:
    7z | out-null

# Installs ripgrep find llvm just mpv-install
install-all: ripgrep find just mpv-install

# Updates ripgrep find mpv rust
update-all: ripgrep find oxipng rust mpv

nvim-data := env_var("LOCALAPPDATA") + "/nvim-data"

# Updates rust toolchain(s)
rust:
    rustup update

# Installs & updates just
just:
    -git.exe clone https://github.com/casey/just.git {{data_directory()}}/just
    git -C {{data_directory()}}/just pull
    echo "run 'cargo +nightly install --locked --path {{data_directory()}}/just' because just cannot update itself"

# Installs & updates ripgrep
ripgrep:
    -git.exe clone https://github.com/BurntSushi/ripgrep.git {{data_directory()}}/ripgrep
    git -C {{data_directory()}}/ripgrep pull
    -cargo +nightly install --locked --features "pcre2 simd-accel" --path {{data_directory()}}/ripgrep

# Installs & updates find
find:
    -git clone https://github.com/sharkdp/fd.git {{data_directory()}}/fd
    git -C {{data_directory()}}/fd pull
    cargo +nightly install --locked --path {{data_directory()}}/fd

mpv_latest := "https://api.github.com/repos/shinchiro/mpv-winbuild-cmake/releases/latest"
mpv_dir := data_directory() + "/mpv"

oxipng:
    -git clone https://github.com/shssoichiro/oxipng.git {{data_directory()}}/oxipng
    git -C {{data_directory()}}/oxipng pull
    cargo +nightly install --locked --path {{data_directory()}}/oxipng

# Install mpv
mpv-install:
    mkdir {{mpv_dir}}
    $ProgressPreference = 'SilentlyContinue'; \
    $url = (Invoke-RestMethod {{mpv_latest}}).assets.Where( {$_.name -like "mpv-x86_64-v3*"} ).browser_download_url; \
    Invoke-WebRequest $url -OutFile {{mpv_dir}}/mpv.7z
    7z x {{mpv_dir}}/mpv.7z -o{{data_directory()}}/mpv

    git clone https://github.com/RossSmyth/mpv_config.git {{mpv_dir}}/portable_config

# Updates mpv & config
mpv:
    {{mpv_dir}}/updater.bat
    git -C {{mpv_dir}}/portable_config pull


llvm_latest := "https://api.github.com/repos/llvm/llvm-project/releases/latest"

# Installs & updates LLVM
llvm: probe-7zip
    $ProgressPreference = 'SilentlyContinue'; \
    $url = (Invoke-RestMethod {{llvm_latest}}).assets.Where( {$_.name -like "*win64*"} ).browser_download_url; \
    Invoke-WebRequest $url -OutFile {{data_directory()}}/llvm.nsis
    -rm -R {{data_directory()}}/llvm
    7z x {{data_directory()}}/llvm.nsis -o"{{data_directory()}}/llvm" -x!$PLUGINSDIR -x!"Uninstall.exe"
    rm {{data_directory()}}/llvm.nsis

nvim-lazy:
    git clone --filter=blob:none https://github.com/folke/lazy.nvim.git --branch=stable {{nvim-data}}"/lazy/lazy.nvim"

nvim-git:
    git config --global --replace-all core.editor "nvim"